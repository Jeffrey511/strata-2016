{"paragraphs":[{"text":"%md\n## Text Analytics\n#### In which we analyze the Mood of the nation from inferences on SOTU by the POTUS\n####   (State Of The Union addresses by the President Of The US)\n \n#####Goal is to find interesting words in the speeches that reflect the times.\n \n#####Am sure Lincoln didn't worry about WMDs and Iraq; neither did George Washington about inflation, Wall Street and Jobs.","dateUpdated":"Mar 16, 2016 4:39:01 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1458171087043_-330359374","id":"20160316-163127_1174451799","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Text Analytics</h2>\n<h4>In which we analyze the Mood of the nation from inferences on SOTU by the POTUS</h4>\n<h4>(State Of The Union addresses by the President Of The US)</h4>\n<h5>Goal is to find interesting words in the speeches that reflect the times.</h5>\n<h5>Am sure Lincoln didn't worry about WMDs and Iraq; neither did George Washington about inflation, Wall Street and Jobs.</h5>\n"},"dateCreated":"Mar 16, 2016 4:31:27 PM","dateStarted":"Mar 16, 2016 4:39:01 PM","dateFinished":"Mar 16, 2016 4:39:01 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:376"},{"text":"%pyspark\nfrom pyspark.context import SparkContext\nprint \"Running Spark Version %s\" % (sc.version)","dateUpdated":"Mar 16, 2016 4:34:25 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1458171204578_-1939025173","id":"20160316-163324_1320845061","result":{"code":"SUCCESS","type":"TEXT","msg":"Running Spark Version 1.6.0\n"},"dateCreated":"Mar 16, 2016 4:33:24 PM","dateStarted":"Mar 16, 2016 4:34:25 PM","dateFinished":"Mar 16, 2016 4:35:00 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:377"},{"text":"%pyspark\nfrom pyspark.conf import SparkConf\nconf = SparkConf()\nprint conf.toDebugString()","dateUpdated":"Mar 16, 2016 4:36:16 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1458171265535_423256453","id":"20160316-163425_1873247502","result":{"code":"SUCCESS","type":"TEXT","msg":"\n"},"dateCreated":"Mar 16, 2016 4:34:25 PM","dateStarted":"Mar 16, 2016 4:36:16 PM","dateFinished":"Mar 16, 2016 4:36:16 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:378"},{"text":"%md\n#### MapReduce in one line !\n#### 1. Split lines into words on space\n#### 2. Create key-value pair with key=word, value = 1\n#### 3. Sum value for each word (er ... key)\n#### 4. Then we get key-value RDD with key=word and value = number of times the word occured in a document","dateUpdated":"Mar 16, 2016 4:38:36 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1458171376383_1603787027","id":"20160316-163616_1145585578","result":{"code":"SUCCESS","type":"HTML","msg":"<h4>MapReduce in one line !</h4>\n<h4>1. Split lines into words on space</h4>\n<h4>2. Create key-value pair with key=word, value = 1</h4>\n<h4>3. Sum value for each word (er &hellip; key)</h4>\n<h4>4. Then we get key-value RDD with key=word and value = number of times the word occured in a document</h4>\n"},"dateCreated":"Mar 16, 2016 4:36:16 PM","dateStarted":"Mar 16, 2016 4:38:36 PM","dateFinished":"Mar 16, 2016 4:38:36 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:379"},{"text":"%pyspark\n# imports\nfrom operator import add","dateUpdated":"Mar 16, 2016 4:41:13 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1458171455635_-1509292945","id":"20160316-163735_2091062738","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"Mar 16, 2016 4:37:35 PM","dateStarted":"Mar 16, 2016 4:41:13 PM","dateFinished":"Mar 16, 2016 4:41:13 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:380"},{"text":"%pyspark\nlines = sc.textFile(\"data/sotu/2009-2014-BO.txt\")\nword_count_bo = lines.flatMap(lambda x: x.split(' ')).\\\n    map(lambda x: (x.lower().rstrip().lstrip().rstrip(',').rstrip('.'), 1)).\\\n    reduceByKey(add)\nprint word_count_bo.count()\n# 6658 without lower, 6299 with lower, rstrip,lstrip 4835\n","dateUpdated":"Mar 16, 2016 4:48:01 PM","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1458171673113_582292377","id":"20160316-164113_1813297229","result":{"code":"SUCCESS","type":"TEXT","msg":"4835\n"},"dateCreated":"Mar 16, 2016 4:41:13 PM","dateStarted":"Mar 16, 2016 4:48:01 PM","dateFinished":"Mar 16, 2016 4:48:02 PM","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:381"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1458171754566_1372706180","id":"20160316-164234_1126774053","dateCreated":"Mar 16, 2016 4:42:34 PM","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:382"}],"name":"Text Analytics","id":"2BFN31NA7","angularObjects":{"2BFJWMQ9H":[],"2BE8A7YV6":[],"2BG1VHWRJ":[],"2BEKJ6EK5":[],"2BF216UPS":[],"2BEZ62K9N":[],"2BD587MW7":[],"2BE7MJQ3Z":[],"2BFKH5WZX":[],"2BDJW333S":[],"2BEB288BJ":[],"2BFAUCSV2":[],"2BFK98EU6":[],"2BCTH3CWC":[]},"config":{"looknfeel":"default"},"info":{}}